{1,
{3,
{"alehinsasha-Text-patterns-1C",1,0,"",""},
{5,
{"Управляющие",1,0,"",""},
{3,
{"Функции",1,0,"",""},
{0,
{"Функция (обычная)",0,0,"ф","Функция <?>()

КонецФункции
"}
},
{0,
{"Функция модуля формы",0,0,"ф","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаСервереБезКонтекста"", ""НаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"">
Функция <?>()

КонецФункции
"}
},
{0,
{"Функция модуля команды",0,0,"ф","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаКлиентеНаСервере"", ""НаКлиентеНаСервере"">
Функция <?>()

КонецФункции"}
}
},
{3,
{"Процедуры",1,0,"",""},
{0,
{"Процедура (обычная)",0,0,"п","Процедура <?>()

КонецПроцедуры
"}
},
{0,
{"Процедура модуля формы",0,0,"п","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаСервереБезКонтекста"", ""НаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"">
Процедура <?>()

КонецПроцедуры"}
},
{0,
{"Процедура модуля команды",0,0,"п","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаКлиентеНаСервере"", ""НаКлиентеНаСервере"">
Процедура <?>()

КонецПроцедуры"}
}
},
{3,
{"Условия",1,0,"",""},
{0,
{"Если",0,0,"у","Если <?> Тогда
	
КонецЕсли;
"}
},
{0,
{"ЕслиИначеЕсли",0,0,"у","Если <?> Тогда
	
ИначеЕсли  Тогда
	
КонецЕсли;
"}
},
{0,
{"ЕслиИначе",0,0,"у","Если <?> Тогда
	
Иначе
	
КонецЕсли;
"}
}
},
{3,
{"Циклы",1,0,"",""},
{0,
{"Для каждого",0,0,"ц","Для Каждого <?> Из  Цикл
	
КонецЦикла;"}
},
{0,
{"Пока",0,0,"ц","Пока <?> Цикл
	
КонецЦикла;"}
},
{0,
{"Прервать",0,0,"ц","Прервать;"}
}
},
{3,
{"Прочее",1,0,"",""},
{0,
{"Результат",0,0,"пр","Результат = <?""Выберите стартовое значение"", ВыборВарианта, ""Неопределено"", ""Неопределено"", ""Истина"", ""Истина"", ""Ложь"", ""Ложь"", ""Структура"", ""Новый Структура"", ""Массив"", ""Новый Массив"">;

<?>

Возврат Результат;"}
},
{0,
{"Возврат",0,0,"пр","Возврат<?>;"}
},
{0,
{"На сервере",0,0,"пр","<?""Основной реквизит"">НаСервере = РеквизитФормыВЗначение(""<?""Основной реквизит"">"");

<?>

ЗначениеВРеквизитФормы(<?""Основной реквизит"">НаСервере, ""<?""Основной реквизит"">"");
"}
}
}
},
{3,
{"Утверждения",1,0,"",""},
{0,
{"Проверить истину",0,0,"утв","Ванесса.ПроверитьИстину(<?>);"}
},
{0,
{"Проверить ложь",0,0,"утв","Ванесса.ПроверитьЛожь(<?>);"}
},
{0,
{"Посмотреть значение",0,0,"","Ванесса.ПосмотретьЗначение(<?"""">,Истина);
"}
}
},
{1,
{"Алгоритмы",1,0,"",""},
{3,
{"Работа с ",1,0,"",""},
{1,
{"Запросами",1,0,"",""},
{0,
{"ПолучитьМассивСтруктурИзРезультатаЗапроса",0,0,"","
&НаСервереБезКонтекста
Функция ПолучитьМассивСтруктурИзРезультатаЗапроса(РезультатЗапроса)
	Результат = Новый Массив;
	
	Колонки = РезультатЗапроса.Колонки;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВременнаяСтруктура = Новый Структура;
		Для Каждого Колонка Из Колонки Цикл
			ВременнаяСтруктура.Вставить(Колонка.Имя,  ВыборкаДетальныеЗаписи[Колонка.Имя]);
		КонецЦикла;
		
		Результат.Добавить(ВременнаяСтруктура);		
	КонецЦикла;
	
	Возврат Результат;
КонецФункции
"}
}
},
{3,
{"Формами",1,0,"",""},
{2,
{"Подбор",1,0,"",""},
{0,
{"Код на стороне кнопки ""Подбор""",0,0,"","
&НаКлиенте
Процедура Подбор(Команда)
	ПараметрыПодбора = Новый Структура;
	
	ПараметрыПодбора.Вставить(""ВыбранныеИнфобазы"", ПолучитьВыбранныеИнфобазы());
	
	ОткрытьФорму(""Обработка.РаботаСВнешнимиИсточниками.Форма.ФормаПодбораИнфобаз"", ПараметрыПодбора, ЭтаФорма); 
КонецПроцедуры

&НаСервере
Функция ПолучитьВыбранныеИнфобазы()
	Возврат Объект.Инфобазы.Выгрузить(, ""Инфобаза"").ВыгрузитьКолонку(""Инфобаза"");
КонецФункции

&НаКлиенте
Процедура ОбработатьПодбор(АдресВыбранныхИнфобаз) Экспорт
	ОбработатьПодборНаСервере(АдресВыбранныхИнфобаз);
КонецПроцедуры

&НаСервере
Процедура ОбработатьПодборНаСервере(АдресВыбранныхИнфобаз)
	Объект.Инфобазы.Загрузить(ПолучитьИзВременногоХранилища(АдресВыбранныхИнфобаз));
КонецПроцедуры
"}
},
{0,
{"Код на стороне кнопки ""Завершить подбор""",0,0,"","
&НаКлиенте
Процедура ИнфобазыВыбор(Элемент, ВыбраннаяИнфобаза, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДобавитьВыбраннуюИнфобазу(ВыбраннаяИнфобаза);
КонецПроцедуры

&НаСервере
Процедура ДобавитьВыбраннуюИнфобазу(ВыбраннаяИнфобаза)
	ВыбранныеИнфобазыНаСервере = РеквизитФормыВЗначение(""ВыбранныеИнфобазы"");
	
	ИскомаяИнфобаза = ВыбранныеИнфобазыНаСервере.Найти(ВыбраннаяИнфобаза, ""Инфобаза"");
	Если ИскомаяИнфобаза = Неопределено Тогда
		НоваяСтрока = ВыбранныеИнфобазыНаСервере.Добавить();
		
		НоваяСтрока.Инфобаза = ВыбраннаяИнфобаза;
	КонецЕсли;

	ЗначениеВРеквизитФормы(ВыбранныеИнфобазыНаСервере, ""ВыбранныеИнфобазы"");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВыбранныеИнфобазыНаСервере = РеквизитФормыВЗначение(""ВыбранныеИнфобазы"");
	
	Для Каждого ВыбраннаяИнфобаза Из Параметры.ВыбранныеИнфобазы Цикл
		НоваяСтрока = ВыбранныеИнфобазыНаСервере.Добавить();
		
		НоваяСтрока.Инфобаза =  ВыбраннаяИнфобаза;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ВыбранныеИнфобазыНаСервере, ""ВыбранныеИнфобазы"");
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеИнфобазыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	ВыбранныеИнфобазыПеретаскиваниеНаСервере(ПараметрыПеретаскивания.Значение);
КонецПроцедуры

&НаСервере
Процедура ВыбранныеИнфобазыПеретаскиваниеНаСервере(ПеретаскиваемыеИнфобазы)
	ВыбранныеИнфобазыНаСервере = РеквизитФормыВЗначение(""ВыбранныеИнфобазы"");
	
	Для Каждого ВыбраннаяИнфобаза Из ПеретаскиваемыеИнфобазы Цикл
		ИскомаяИнфобаза = ВыбранныеИнфобазыНаСервере.Найти(ВыбраннаяИнфобаза, ""Инфобаза"");
		Если ИскомаяИнфобаза = Неопределено Тогда
			НоваяСтрока = ВыбранныеИнфобазыНаСервере.Добавить();
			
			НоваяСтрока.Инфобаза = ВыбраннаяИнфобаза;
		КонецЕсли;
	КонецЦикла;

	ЗначениеВРеквизитФормы(ВыбранныеИнфобазыНаСервере, ""ВыбранныеИнфобазы"");
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПодбор(Команда)
	АдресВыбранныхИнфобаз = ПоместитьВыбранныеИнфобазыВоВременноеХранилище();

	ВладелецФормы.ОбработатьПодбор(АдресВыбранныхИнфобаз);
	
	Закрыть();
КонецПроцедуры

&НаСервере
Функция ПоместитьВыбранныеИнфобазыВоВременноеХранилище()
	Возврат ПоместитьВоВременноеХранилище(ВыбранныеИнфобазы.Выгрузить());
КонецФункции"}
}
},
{0,
{"Определить тип составного реквизита",0,0,"","
&НаКлиенте
Процедура ОпределитьТипСоставногоРеквизита(ИмяРеквизита)
	Элементы[ИмяРеквизита].ОграничениеТипа = Новый ОписаниеТипов(""Неопределено"");
	Если Запись.ВариантСопровождения = Перечисления.КИС_ВариантСопровожденияБухгалтерскогоУчета.ОЦО Тогда
		Элементы[ИмяРеквизита].ОграничениеТипа = Новый ОписаниеТипов(""СправочникСсылка.Контрагенты"");
	КонецЕсли;
КонецПроцедуры
"}
},
{0,
{"Переоткрытие управляемой формы (асинхронный режим)",0,0,"","
&НаКлиенте
Процедура Переоткрыть(Команда)
	ФайлВнешнейОбработки = ПолучитьФайлВнешнейОбработки();
	
	НачатьПомещениеФайла(,, ФайлВнешнейОбработки, Ложь); 

	ОткрытьФорму(ЭтаФорма.ИмяФормы,,, Истина);
	
	Закрыть();
КонецПроцедуры

&НаСервере
Функция ПолучитьФайлВнешнейОбработки()
	Файл = РеквизитФормыВЗначение(""Объект"").ИспользуемоеИмяФайла;
	
	ВнешняяОбработка = ВнешниеОбработки.Создать(Файл, Ложь);
	
	Возврат Файл;
КонецФункции
"}
}
},
{1,
{"Строками",1,0,"",""},
{0,
{"Получить имя переменной из строки",0,0,"","
&НаКлиенте
Функция ПолучитьИмяПеременнойИзСтроки(ИсходнаяСтрока)
	ПроверочнаяСтрока = ПолучитьПроверочнуюСтроку();
	
	ИсходнаяСтрока = СокрЛП(ИсходнаяСтрока);
	ИтоговаяСтрока = """";
	
	Пробел = "" "";
	НижнееПодчеркивание = ""_"";
	
	КрайнийСимвол = Истина;
	
	ДлинаСтроки = СтрДлина(ИсходнаяСтрока);
	Для Счетчик = 1 По ДлинаСтроки Цикл
		ТекущийСимвол = Сред(ИсходнаяСтрока, Счетчик, 1);
		
		Если Истина
			И ТекущийСимвол = Пробел
			И Не КрайнийСимвол = НижнееПодчеркивание
			Тогда
			
			ИтоговаяСтрока = ИтоговаяСтрока + ""_"";

		Иначе
			Если Найти(ПроверочнаяСтрока, ТекущийСимвол) > 0 Тогда
				ИтоговаяСтрока = ИтоговаяСтрока + ТекущийСимвол;

			КонецЕсли;
		КонецЕсли;
		
		КрайнийСимвол = Прав(ИтоговаяСтрока, 1);
	КонецЦикла;
	
	ПервыйСимвол = Лев(ИтоговаяСтрока, 1);
	Если Найти(""0123456789"", ПервыйСимвол) > 0 Тогда
		ИтоговаяСтрока = НижнееПодчеркивание + ИтоговаяСтрока;
	КонецЕсли;
	
	Возврат ИтоговаяСтрока;
КонецФункции
"}
}
}
}
}
}
}